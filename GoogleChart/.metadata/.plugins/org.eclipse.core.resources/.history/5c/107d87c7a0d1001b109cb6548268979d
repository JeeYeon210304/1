package com.google.chart.controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.codehaus.jackson.JsonGenerationException;
import org.codehaus.jackson.map.JsonMappingException;
import org.codehaus.jackson.map.ObjectMapper;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.chart.biz.GoogleChartBiz;
import com.google.chart.dao.GoogleChartDao;
import com.google.chart.dto.GoogleChartDto;
import com.google.gson.Gson;

@Controller
public class HomeController {
	
	@Autowired
	private GoogleChartBiz biz;
	
	@Autowired
	private GoogleChartDao dao;
	
	@RequestMapping(value="/chartData.do", method=RequestMethod.POST)
	@ResponseBody
	public Map<String, Integer> chartData(HttpSession session, @RequestBody GoogleChartDto dto, String chartId){
		
		GoogleChartDto res = biz.chartData(chartId)
		
		
		/*
		Map<String, String> map = new HashMap<String, String>();
		
		GoogleChartDto GCdto = new GoogleChartDto();	
		
		String chartreadingtime = GCdto.getChartreadingtime();
		String chartMdate = GCdto.getChartMdate();
		
		map.put("chartreadingtime", chartreadingtime);
		map.put("chartMdate", chartMdate);
		
		model.addAttribute("dto", biz.chartData(chartId));
		model.addAttribute("map", map);
		
		JSONObject jsons = new JSONObject();
		*/
		
		// model.addAttribute("list", biz.chartData(chartId));
		
		/*
		Gson gson = new Gson();
		String json = "";
		json = gson.toJson(list);
		response.setContentType("application/json");
		response.setCharacterEncoding("utf-8");
		
		try {
			response.getWriter().print(json);
		} catch (IOException e) {
			e.printStackTrace();
		}
		*/
		
		return map;
	}
/*
	@RequestMapping("/test.do")
	@ResponseBody
	public String test(Model model) {
		
		
		List<GoogleChartDto> list = biz.chartData();
		model.addAttribute("list", list);
		HashMap map = new HashMap();
		map.put("list", list);
		String json = null;

		try {
			json = new ObjectMapper().writeValueAsString(map);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return json;
		
	}
*/
	
	@RequestMapping("/CRTimeInsert.do")
	public String RTimeInsert(GoogleChartDto dto) {
		
		if(biz.insert(dto) > 0) {
			return "home";
		}
		return "home";
	}
	
}






















